{"version":3,"sources":["components/UniswapV3Sniper.js","components/SushiswapSniper.js","components/UniswapV2Sniper.js","App.js","reportWebVitals.js","index.js"],"names":["apolloClient","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","UniswapV3Sniper","web3","useState","tokenAddress","setTokenAddress","loading","setLoading","pairsLoading","setPairsLoading","finished","setFinished","pairs","setPairs","showModal","setShowModal","selectedPair","setSelectedPair","error","setError","cancelButtonRef","useRef","uniswapV3","eth","Contract","uniswapV3Abi","swapRouter","quoterAbi","swapRouterAbi","closeModal","checkPair","a","getAccounts","accounts","pool","poolAbi","id","getBlock","block","token1","token0","methods","fee","call","timestamp","utils","toWei","params","tokenIn","tokenOut","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96","console","log","exactInputSingle","send","from","value","gas","symbol","toString","latestBlock","tokenContract","erc20Abi","options","address","balanceOf","approve","sellParams","getPairs","length","toast","WETH9","wethAddress","ethApolloQuery","gql","toLowerCase","query","result","data","pools","sort","b","parseFloat","totalValueLockedETH","client","className","htmlFor","aria-hidden","type","name","placeholder","onChange","e","target","onClick","role","map","pair","toFixed","src","toChecksumAddress","href","Root","show","as","Fragment","initialFocus","onClose","val","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","SushiswapSniper","UniswapV2Sniper","uniswapV2","uniswapV2abi","getAmountsOut","tokenAmounts","swapETHForExactTokens","swapExactTokensForETH","WETH","reserveETH","classNames","classes","filter","Boolean","join","App","ganacheWeb3","setGanacheWeb3","currentTabIndex","setCurrentTabIndex","tabs","useEffect","window","ethereum","setupApp","metamaskWeb3","Web3","getBlockNumber","blockNumber","gProvider","Ganache","provider","db","MemDOWN","asyncRequestProcessing","fork","defaultBalanceEther","locked","gasLimit","mnemonic","transactionConfirmationBlocks","setTimeout","position","autoClose","hideProgressBar","closeOnClick","rtl","pauseOnHover","defaultValue","find","_","index","indexOf","tab","aria-label","tabIdx","aria-current","undefined","getSniper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa075975.chunk.js","sourcesContent":["import { SearchIcon, QrcodeIcon, LinkIcon, XCircleIcon, CheckCircleIcon } from '@heroicons/react/solid'\nimport { useState, useRef, Fragment } from 'react';\nimport { toast } from 'react-toastify';\nimport erc20Abi from '../abis/erc20.json';\nimport poolAbi from '../abis/pool.json';\nimport quoterAbi from '../abis/quoter.json';\nimport swapRouterAbi from '../abis/swapRouter.json';\nimport uniswapV3Abi from '../abis/uniswapV3.json';\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Dialog, Transition } from '@headlessui/react'\n\nconst apolloClient = new ApolloClient({\n    link: new HttpLink({\n        uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\",\n    }),\n    cache: new InMemoryCache(),\n});\n\nconst UniswapV3Sniper = ({ web3 }) => {\n    const [tokenAddress, setTokenAddress] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [pairsLoading, setPairsLoading] = useState(false);\n    const [finished, setFinished] = useState(false);\n    const [pairs, setPairs] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [selectedPair, setSelectedPair] = useState(null);\n    const [error, setError] = useState(\"\");\n    \n    const usdcAddress = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\n\n    const cancelButtonRef = useRef(null)\n\n    const uniswapV3 = new web3.eth.Contract(uniswapV3Abi, '0xE592427A0AEce92De3Edee1F18E0157C05861564');\n    const quoter = new web3.eth.Contract(quoterAbi, '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6');\n    const swapRouter = new web3.eth.Contract(swapRouterAbi, '0xE592427A0AEce92De3Edee1F18E0157C05861564');\n\n    const closeModal = () => {\n        setSelectedPair(null);\n        setShowModal(false);\n        setFinished(false);\n        setError('');\n    }\n\n\n    const checkPair = async () => {\n        setLoading(true);\n        setError(null);\n        const accounts = await web3.eth.getAccounts();\n        const pool = new web3.eth.Contract(poolAbi, selectedPair.id);\n        try {\n            const block = await web3.eth.getBlock(\"latest\");\n            const params = {\n                tokenIn: selectedPair.token1.id,\n                tokenOut: selectedPair.token0.id,\n                fee: await pool.methods.fee().call(),\n                recipient: accounts[0],\n                deadline: block.timestamp + 1000,\n                amountIn: web3.utils.toWei(\"0.1\"),\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0,\n            }\n            console.log(params);\n            await swapRouter.methods.exactInputSingle(params).send({ from: accounts[0], value: web3.utils.toWei(\"0.1\"), gas: 1000000000});    \n        } catch (error) {\n            console.error(error);\n            setError(`Unable to buy ${selectedPair.token0.symbol} with 0.1 ${selectedPair.token1.symbol}\\n\\nError: ${error.toString()}`);\n            setLoading(false);\n            return;\n        }\n\n        try {\n            const latestBlock = await web3.eth.getBlock(\"latest\");\n            const tokenContract = new web3.eth.Contract(erc20Abi, selectedPair.token0.id);\n            await tokenContract.methods.approve(uniswapV3.options.address, await tokenContract.methods.balanceOf(accounts[0]).call()).send({ from: accounts[0], gas: 1000000000});\n            const sellParams = {\n                tokenIn: selectedPair.token0.id,\n                tokenOut: selectedPair.token1.id,\n                fee: await pool.methods.fee().call(),\n                recipient: accounts[0],\n                deadline: latestBlock.timestamp + 1000,\n                amountIn: await tokenContract.methods.balanceOf(accounts[0]).call(),\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0,\n            }\n            await swapRouter.methods.exactInputSingle(sellParams).send({ from: accounts[0], gas: 1000000000});    \n            setFinished(true);\n        } catch (error) {\n            setError(`Unable to sell ${selectedPair.token0.symbol} back into Uniswap. This is a strong indicator that this token may be an honeypot.\\n\\nError: ${error.toString()}`);\n        }\n        setLoading(false);\n    }\n\n    const getPairs = async () => {\n        if (!tokenAddress || tokenAddress.length !== \"0x0000000000000000000000000000000000000000\".length) {\n            toast.error(\"Invalid token address.\");\n            return;\n        }\n        setPairsLoading(true);\n        const wethAddress = await uniswapV3.methods.WETH9().call();\n        setPairs([]);\n        try {\n            const ethApolloQuery = gql`\n            {\n                pools (where: {token0: \"${tokenAddress.toLowerCase()}\" token1: \"${wethAddress.toLowerCase()}\"}) {\n                id\n                token0 {\n                  id\n                  symbol\n                }\n                token1 {\n                  id\n                  symbol\n                }\n                totalValueLockedETH\n                totalValueLockedUSD\n              }\n            }\n            `\n            const result = await apolloClient.query({ query: ethApolloQuery });\n            console.log(result);\n            setPairs(result.data.pools.sort((a, b) => parseFloat(b.totalValueLockedETH) - parseFloat(a.totalValueLockedETH)));\n        } catch (error) {\n            console.error(error);\n            toast.error(\"An error occurred while sniping token.\");\n        } finally {\n            setPairsLoading(false);\n        }\n    }\n\n\n    return (\n        <ApolloProvider client={apolloClient}>\n            <div className=\"w-full mt-4 rounded-lg shadow p-4 flex flex-col\">\n                <p>In order to work there <strong>must be</strong> at least a <strong>ETH UniswapV3 pool</strong> for the token you're trying to snipe. In any other case, this tool will fail.</p>\n                <div className=\"mt-4\">\n                    <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\n                        Token address\n                    </label>\n                    <div className=\"mt-1 flex rounded-md shadow-sm\">\n                        <div className=\"relative flex items-stretch flex-grow focus-within:z-10\">\n                            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                                <QrcodeIcon className=\"h-5 w-5 text-indigo-400\" aria-hidden=\"true\" />\n                            </div>\n                            <input\n                                type=\"text\"\n                                name=\"address\"\n                                id=\"address\"\n                                className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-none rounded-l-md pl-10 sm:text-sm border-gray-300\"\n                                placeholder=\"eg. 0x0000000000000000000000000000000000000000\"\n                                value={tokenAddress}\n                                onChange={(e) => setTokenAddress(e.target.value)}\n                            />\n                        </div>\n                            <button\n                                type=\"button\"\n                                className=\"-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n                                onClick={() => getPairs()}\n                            >\n                            <SearchIcon className=\"h-5 w-5 text-indigo-400\" aria-hidden=\"true\" />\n                            <span>Search</span>\n                        </button>\n                    </div>\n                </div>\n                {\n                    pairsLoading && <div className=\"flex justify-center items-center mt-6\">\n                        <p className=\"text-center font-bold animate-bounce\">🍯 Loading...</p>\n                    </div>\n                }\n                {\n                    (pairs && pairs.length > 0) && <div className=\"mt-4\">\n                        <div className=\"relative\">\n                            <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n                                <div className=\"w-full border-t border-gray-300\" />\n                            </div>\n                            <div className=\"relative flex justify-center\">\n                                <span className=\"px-3 bg-white text-lg font-medium text-gray-900\"><strong>Pairs found:</strong> {pairs.length}</span>\n                            </div>\n                        </div>\n                        <ul role=\"list\" className=\"mt-4 grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n                            {pairs.map((pair) => (\n                                <li key={pair.id} className=\"col-span-1 bg-white rounded-lg shadow divide-y divide-gray-200\">\n                                <div className=\"w-full flex items-center justify-between p-6 space-x-6\">\n                                    <div className=\"flex-1 truncate\">\n                                        <div className=\"flex items-center space-x-3\">\n                                            <h3 className=\"text-gray-900 text-sm font-medium truncate font-bold\">{pair.token0.symbol}/{pair.token1.symbol}</h3>\n                                        </div>\n                                        <p className=\"mt-1 text-gray-500 text-sm truncate\">{parseFloat(pair.totalValueLockedETH).toFixed(6)} ETH locked</p>\n                                    </div>\n                                    <div className=\"flex\">\n                                        <img className=\"-mr-4 z-10 w-10 h-10 rounded-full bg-gray-300 flex-shrink-0\" src={`https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${web3.utils.toChecksumAddress(pair.token0.id)}/logo.png`} />\n                                        <img className=\"w-10 h-10 rounded-full bg-gray-300 flex-shrink-0\" src={`https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${web3.utils.toChecksumAddress(pair.token1.id)}/logo.png`} />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"-mt-px flex divide-x divide-gray-200\">\n                                    <div className=\"w-0 flex-1 flex\">\n                                        <a\n                                        onClick={() => { setSelectedPair(pair); setShowModal(true); }}\n                                        className=\"cursor-pointer relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-bl-lg hover:text-gray-500\"\n                                        \n                                        >\n                                            <SearchIcon className=\"w-5 h-5 text-gray-400\" aria-hidden=\"true\" />\n                                            <span className=\"ml-3\">Check pool</span>\n                                        </a>\n                                    </div>\n                                    <div className=\"-ml-px w-0 flex-1 flex\">\n                                        <a\n                                        href={`https://info.uniswap.org/#/pools/${pair.id}`}\n                                        target=\"_blank\"\n                                        className=\"cursor-pointer relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-br-lg hover:text-gray-500\"\n                                        >\n                                            <LinkIcon className=\"w-5 h-5 text-gray-400\" aria-hidden=\"true\" />\n                                            <span className=\"ml-3\">Uniswap</span>\n                                        </a>\n                                    </div>\n                                    </div>\n                                </div>\n                                </li>\n                            ))}\n                            </ul>\n                    </div>\n                }\n                {\n                    (showModal && selectedPair) && <Transition.Root show={showModal} as={Fragment}>\n                    <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" initialFocus={cancelButtonRef} onClose={(val) => closeModal()}>\n                      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                        <Transition.Child\n                          as={Fragment}\n                          enter=\"ease-out dration-300\"\n                          enterFrom=\"opacity-0\"\n                          enterTo=\"opacity-100\"\n                          leave=\"ease-in duration-200\"\n                          leaveFrom=\"opacity-100\"\n                          leaveTo=\"opacity-0\"\n                        >\n                          <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                        </Transition.Child>\n              \n                        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                          &#8203;\n                        </span>\n                        <Transition.Child\n                          as={Fragment}\n                          enter=\"ease-out duration-300\"\n                          enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                          enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                          leave=\"ease-in duration-200\"\n                          leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                          leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        >\n                          <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n                            <div>\n                              <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100\">\n                                <SearchIcon className=\"h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              </div>\n                              <div className=\"mt-3 text-center sm:mt-5\">\n                                <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                  Pool <strong>{selectedPair.token0.symbol}/{selectedPair.token1.symbol}</strong>\n                                </Dialog.Title>\n                                {\n                                    (!loading && !finished) && <div className=\"mt-2\">\n                                      <p className=\"text-sm text-gray-500\">\n                                        This will simulate a buy and sell transaction using <strong>ganache browser</strong> forked at the current block. This method is not foolproof: if it's not an honeypot now, it can be turned into one at any moment.\n                                      </p>\n                                    </div>\n                                }\n                                {\n                                    (!loading && finished && !error) && <div className=\"text-left mt-6 rounded-md bg-green-50 p-4\">\n                                        <div className=\"flex\">\n                                        <div className=\"flex-shrink-0\">\n                                            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                        </div>\n                                        <div className=\"ml-3\">\n                                            <h3 className=\"text-sm font-medium text-green-800\">Check completed!</h3>\n                                            <div className=\"mt-2 text-sm text-green-700\">\n                                                <p>We were able to buy and sell the token {selectedPair.token0.symbol} correctly on UniswapV3. For now, it seems legit.</p>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>\n                                }\n                                {\n                                    loading && <div className=\"flex justify-center items-center mt-6\">\n                                        <p className=\"text-center font-bold animate-bounce\">🍯 Loading...</p>\n                                    </div>\n                                }\n                                {\n                                    error &&  <div className=\"rounded-md bg-red-50 p-4 mt-6\">\n                                    <div className=\"flex\">\n                                      <div className=\"flex-shrink-0\">\n                                        <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                                      </div>\n                                      <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-red-800\">{ error }</h3>\n                                      </div>\n                                    </div>\n                                  </div>\n                                }\n                              </div>\n                            </div>\n                            <div className=\"mt-4 sm:mt-6\">\n                                {\n                                    (!loading && !finished) && <button\n                                        type=\"button\"\n                                        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n                                        onClick={() => checkPair()}\n                                        >\n                                        Check for honeypot\n                                    </button>\n                                }\n                                {\n                                    (!loading && finished) && <button\n                                        type=\"button\"\n                                        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n                                        onClick={() => closeModal()}\n                                        >\n                                        Close\n                                    </button>\n                                }\n                            </div>\n                          </div>\n                        </Transition.Child>\n                      </div>\n                    </Dialog>\n                  </Transition.Root>\n                }\n            </div>\n        </ApolloProvider>\n    )\n}\n\nexport default UniswapV3Sniper;","const SushiswapSniper = () => {\n    return (\n        <div className=\"w-full mt-4 rounded-lg shadow p-8 flex justify-center items-center\">\n            <h1 className=\"font-bold text-2xl\">⚠️ Work in progress ⚠️</h1>\n        </div>\n    )\n}\n\nexport default SushiswapSniper;","import { SearchIcon, QrcodeIcon, LinkIcon, XCircleIcon, CheckCircleIcon } from '@heroicons/react/solid'\nimport { useState, useRef, Fragment } from 'react';\nimport { toast } from 'react-toastify';\nimport erc20Abi from '../abis/erc20.json';\nimport uniswapV2abi from '../abis/uniswapV2.json';\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Dialog, Transition } from '@headlessui/react'\n\nconst apolloClient = new ApolloClient({\n    link: new HttpLink({\n        uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\",\n    }),\n    cache: new InMemoryCache(),\n});\n\nconst UniswapV2Sniper = ({ web3 }) => {\n    const [tokenAddress, setTokenAddress] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [pairsLoading, setPairsLoading] = useState(false);\n    const [finished, setFinished] = useState(false);\n    const [pairs, setPairs] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [selectedPair, setSelectedPair] = useState(null);\n    const [error, setError] = useState(\"\");\n    \n    const usdcAddress = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\n\n    const cancelButtonRef = useRef(null)\n\n    const uniswapV2 = new web3.eth.Contract(uniswapV2abi, '0x7a250d5630b4cf539739df2c5dacb4c659f2488d');\n\n    const closeModal = () => {\n        setSelectedPair(null);\n        setShowModal(false);\n        setFinished(false);\n        setError('');\n    }\n\n    const checkPair = async () => {\n        setLoading(true);\n        const tokenAmounts = await uniswapV2.methods.getAmountsOut(web3.utils.toWei(\"0.1\"), [selectedPair.token1.id, selectedPair.token0.id]).call();\n        const accounts = await web3.eth.getAccounts();\n        try {\n            const block = await web3.eth.getBlock(\"latest\");\n            await uniswapV2.methods.swapETHForExactTokens(tokenAmounts[1], [selectedPair.token1.id, selectedPair.token0.id], accounts[0], block.timestamp + 1000).send({ from: accounts[0], value: web3.utils.toWei(\"0.1\"), gas: 1000000000});    \n        } catch (error) {\n            setError(`Unable to buy ${selectedPair.token0.symbol} with 0.1 ${selectedPair.token1.symbol}: ${error.toString()}`);\n            setLoading(false);\n            return;\n        }\n\n        try {\n            const latestBlock = await web3.eth.getBlock(\"latest\");\n            const tokenContract = new web3.eth.Contract(erc20Abi, selectedPair.token0.id);\n            await tokenContract.methods.approve(uniswapV2.options.address, await tokenContract.methods.balanceOf(accounts[0]).call()).send({ from: accounts[0], gas: 1000000000});\n            await uniswapV2.methods.swapExactTokensForETH(tokenAmounts[1], 0, [selectedPair.token0.id, selectedPair.token1.id], accounts[0], latestBlock.timestamp + 1000).send({ from: accounts[0], gas: 1000000000});    \n            setFinished(true);\n        } catch (error) {\n            setError(`Unable to sell ${selectedPair.token0.symbol} back into Uniswap. This is a strong indicator that this token may be an honeypot.\\n\\nError: ${error.toString()}`);\n        }\n        setLoading(false);\n    }\n\n    const getPairs = async () => {\n        if (!tokenAddress || tokenAddress.length !== \"0x0000000000000000000000000000000000000000\".length) {\n            toast.error(\"Invalid token address.\");\n            return;\n        }\n        setPairsLoading(true);\n        const wethAddress = await uniswapV2.methods.WETH().call();\n        setPairs([]);\n        try {\n            const ethApolloQuery = gql`\n            {\n                pairs (where: {token0: \"${tokenAddress.toLowerCase()}\" token1: \"${wethAddress.toLowerCase()}\"}){\n                    id\n                    token0 {\n                        id\n                        symbol\n                    }\n                    token1 {\n                        id\n                        symbol\n                    }\n                    reserveETH\n                }\n              }\n              \n            `\n            const result = await apolloClient.query({ query: ethApolloQuery });\n            /*\n            const usdcApolloQuery = gql`\n            {\n                pairs (where: {token0: \"${tokenAddress.toLowerCase()}\" token1: \"${usdcAddress}\"}){\n                    id\n                    token0 {\n                        id\n                        symbol\n                    }\n                    token1 {\n                        id\n                        symbol\n                    }\n                    reserveETH\n                }\n              }\n              \n            `\n            const usdcResult = await apolloClient.query({ query: usdcApolloQuery });\n            */\n            setPairs(result.data.pairs.sort((a, b) => parseFloat(b.reserveETH) - parseFloat(a.reserveETH)));\n        } catch (error) {\n            console.error(error);\n            toast.error(\"An error occurred while sniping token.\");\n        } finally {\n            setPairsLoading(false);\n        }\n    }\n\n    return (\n        <ApolloProvider client={apolloClient}>\n            <div className=\"w-full mt-4 rounded-lg shadow p-4 flex flex-col\">\n                <p>In order to work there <strong>must be</strong> at least a <strong>ETH UniswapV2 pool</strong> for the token you're trying to snipe. In any other case, this tool will fail.</p>\n                <div className=\"mt-4\">\n                    <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\n                        Token address\n                    </label>\n                    <div className=\"mt-1 flex rounded-md shadow-sm\">\n                        <div className=\"relative flex items-stretch flex-grow focus-within:z-10\">\n                            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                                <QrcodeIcon className=\"h-5 w-5 text-indigo-400\" aria-hidden=\"true\" />\n                            </div>\n                            <input\n                                type=\"text\"\n                                name=\"address\"\n                                id=\"address\"\n                                className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-none rounded-l-md pl-10 sm:text-sm border-gray-300\"\n                                placeholder=\"eg. 0x0000000000000000000000000000000000000000\"\n                                value={tokenAddress}\n                                onChange={(e) => setTokenAddress(e.target.value)}\n                            />\n                        </div>\n                            <button\n                                type=\"button\"\n                                className=\"-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n                                onClick={() => getPairs()}\n                            >\n                            <SearchIcon className=\"h-5 w-5 text-indigo-400\" aria-hidden=\"true\" />\n                            <span>Search</span>\n                        </button>\n                    </div>\n                </div>\n                {\n                    pairsLoading && <div className=\"flex justify-center items-center mt-6\">\n                        <p className=\"text-center font-bold animate-bounce\">🍯 Loading...</p>\n                    </div>\n                }\n                {\n                    (pairs && pairs.length > 0) && <div className=\"mt-4\">\n                        <div className=\"relative\">\n                            <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n                                <div className=\"w-full border-t border-gray-300\" />\n                            </div>\n                            <div className=\"relative flex justify-center\">\n                                <span className=\"px-3 bg-white text-lg font-medium text-gray-900\"><strong>Pairs found:</strong> {pairs.length}</span>\n                            </div>\n                        </div>\n                        <ul role=\"list\" className=\"mt-4 grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n                            {pairs.map((pair) => (\n                                <li key={pair.id} className=\"col-span-1 bg-white rounded-lg shadow divide-y divide-gray-200\">\n                                <div className=\"w-full flex items-center justify-between p-6 space-x-6\">\n                                    <div className=\"flex-1 truncate\">\n                                        <div className=\"flex items-center space-x-3\">\n                                            <h3 className=\"text-gray-900 text-sm font-medium truncate font-bold\">{pair.token0.symbol}/{pair.token1.symbol}</h3>\n                                        </div>\n                                        <p className=\"mt-1 text-gray-500 text-sm truncate\">{parseFloat(pair.reserveETH).toFixed(6)} ETH locked</p>\n                                    </div>\n                                    <div className=\"flex\">\n                                        <img className=\"-mr-4 z-10 w-10 h-10 rounded-full bg-gray-300 flex-shrink-0\" src={`https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${web3.utils.toChecksumAddress(pair.token0.id)}/logo.png`} />\n                                        <img className=\"w-10 h-10 rounded-full bg-gray-300 flex-shrink-0\" src={`https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${web3.utils.toChecksumAddress(pair.token1.id)}/logo.png`} />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"-mt-px flex divide-x divide-gray-200\">\n                                    <div className=\"w-0 flex-1 flex\">\n                                        <a\n                                        onClick={() => { setSelectedPair(pair); setShowModal(true); }}\n                                        className=\"cursor-pointer relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-bl-lg hover:text-gray-500\"\n                                        \n                                        >\n                                            <SearchIcon className=\"w-5 h-5 text-gray-400\" aria-hidden=\"true\" />\n                                            <span className=\"ml-3\">Check pool</span>\n                                        </a>\n                                    </div>\n                                    <div className=\"-ml-px w-0 flex-1 flex\">\n                                        <a\n                                        href={`https://v2.info.uniswap.org/pair/${pair.id}`}\n                                        target=\"_blank\"\n                                        className=\"cursor-pointer relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-br-lg hover:text-gray-500\"\n                                        >\n                                            <LinkIcon className=\"w-5 h-5 text-gray-400\" aria-hidden=\"true\" />\n                                            <span className=\"ml-3\">Uniswap</span>\n                                        </a>\n                                    </div>\n                                    </div>\n                                </div>\n                                </li>\n                            ))}\n                            </ul>\n                    </div>\n                }\n                {\n                    (showModal && selectedPair) && <Transition.Root show={showModal} as={Fragment}>\n                    <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" initialFocus={cancelButtonRef} onClose={(val) => closeModal()}>\n                      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                        <Transition.Child\n                          as={Fragment}\n                          enter=\"ease-out dration-300\"\n                          enterFrom=\"opacity-0\"\n                          enterTo=\"opacity-100\"\n                          leave=\"ease-in duration-200\"\n                          leaveFrom=\"opacity-100\"\n                          leaveTo=\"opacity-0\"\n                        >\n                          <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                        </Transition.Child>\n              \n                        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                          &#8203;\n                        </span>\n                        <Transition.Child\n                          as={Fragment}\n                          enter=\"ease-out duration-300\"\n                          enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                          enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                          leave=\"ease-in duration-200\"\n                          leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                          leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        >\n                          <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n                            <div>\n                              <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100\">\n                                <SearchIcon className=\"h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              </div>\n                              <div className=\"mt-3 text-center sm:mt-5\">\n                                <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                  Pool <strong>{selectedPair.token0.symbol}/{selectedPair.token1.symbol}</strong>\n                                </Dialog.Title>\n                                {\n                                    (!loading && !finished) && <div className=\"mt-2\">\n                                      <p className=\"text-sm text-gray-500\">\n                                        This will simulate a buy and sell transaction using <strong>ganache browser</strong> forked at the current block. This method is not foolproof: if it's not an honeypot now, it can be turned into one at any moment.\n                                      </p>\n                                    </div>\n                                }\n                                {\n                                    (!loading && finished && !error) && <div className=\"text-left mt-6 rounded-md bg-green-50 p-4\">\n                                        <div className=\"flex\">\n                                        <div className=\"flex-shrink-0\">\n                                            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                        </div>\n                                        <div className=\"ml-3\">\n                                            <h3 className=\"text-sm font-medium text-green-800\">Check completed!</h3>\n                                            <div className=\"mt-2 text-sm text-green-700\">\n                                                <p>We were able to buy and sell the token {selectedPair.token0.symbol} correctly on UniswapV2. For now, it seems legit.</p>\n                                            </div>\n                                        </div>\n                                        </div>\n                                    </div>\n                                }\n                                {\n                                    loading && <div className=\"flex justify-center items-center mt-6\">\n                                        <p className=\"text-center font-bold animate-bounce\">🍯 Loading...</p>\n                                    </div>\n                                }\n                                {\n                                    error &&  <div className=\"rounded-md bg-red-50 p-4 mt-6\">\n                                    <div className=\"flex\">\n                                      <div className=\"flex-shrink-0\">\n                                        <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                                      </div>\n                                      <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-red-800\">{ error }</h3>\n                                      </div>\n                                    </div>\n                                  </div>\n                                }\n                              </div>\n                            </div>\n                            <div className=\"mt-4 sm:mt-6\">\n                                {\n                                    (!loading && !finished) && <button\n                                        type=\"button\"\n                                        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n                                        onClick={() => checkPair()}\n                                        >\n                                        Check for honeypot\n                                    </button>\n                                }\n                                {\n                                    (!loading && finished) && <button\n                                        type=\"button\"\n                                        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n                                        onClick={() => closeModal()}\n                                        >\n                                        Close\n                                    </button>\n                                }\n                            </div>\n                          </div>\n                        </Transition.Child>\n                      </div>\n                    </Dialog>\n                  </Transition.Root>\n                }\n            </div>\n        </ApolloProvider>\n    )\n}\n\nexport default UniswapV2Sniper;","import { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport UniswapV3Sniper from './components/UniswapV3Sniper';\nimport SushiswapSniper from './components/SushiswapSniper';\nimport UniswapV2Sniper from './components/UniswapV2Sniper';\nimport {Helmet} from \"react-helmet\";\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nfunction App() {\n  const [ganacheWeb3, setGanacheWeb3] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\n\n  const tabs = ['UniswapV2 🦄', 'UniswapV3 🦄', 'Sushiswap 🍣'];\n\n  const getSniper = () => {\n    switch (currentTabIndex) {\n      case 1:\n        return <UniswapV3Sniper web3={ganacheWeb3} />\n      case 2:\n        return <SushiswapSniper web3={ganacheWeb3} />\n      default:\n        return <UniswapV2Sniper web3={ganacheWeb3} />\n    }\n  }\n\n  useEffect(() => {\n    if (window.ethereum) setupApp()\n  }, []);\n\n  const setupApp = async () => {\n    setLoading(true);\n    try {\n      const metamaskWeb3 = new Web3(window.ethereum);\n      const blockNumber = await metamaskWeb3.eth.getBlockNumber();\n      const gProvider = window.Ganache.provider({\n        db: window.MemDOWN(),\n        asyncRequestProcessing: true,\n        fork: `https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161@${blockNumber}`,\n        defaultBalanceEther: 100,\n        a: 1,\n        locked: false,\n        gasLimit: 1000000000,\n        mnemonic: \"derive often other athlete fashion essay tree afraid spin utility ceiling guide\"\n      });\n      const web3 = new Web3(gProvider, null, { transactionConfirmationBlocks: 1 });\n      setGanacheWeb3(web3);\n      // toast('🦄 Connection successful!');\n    } catch (error) {\n      console.error(error);\n      toast.error('An error occurred while connecting to network.');\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 2000);\n    }\n  }\n\n  if (!window.ethereum) {\n    return (\n      <div className=\"h-screen w-screen flex flex-col justify-center items-center px-4\">\n        <h1 className=\"text-3xl text-center mb-8 font-bold animate-bounce\">🦊 Please install Metamask!</h1>\n        <p className=\"text-sm text-center mb-8 font-medium\">Metamask is used to retrieve the latest block, no transactions will be ever prompted to you.</p>\n      </div>\n    )\n  }\n\n  if (loading) {\n    return (\n      <div className=\"h-screen w-screen flex justify-center items-center\">\n        <h1 className=\"text-3xl text-center mb-8 font-bold animate-bounce\">🍯 Loading...</h1>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <ToastContainer position=\"top-right\" autoClose={1500} hideProgressBar={false} closeOnClick rtl={false} pauseOnHover />\n      <div className=\"p-12 md:p-48\">\n        <h1 className=\"text-3xl text-center mb-8 font-bold\">🍯 Honeypot Sniper</h1>\n        <div className=\"sm:hidden\">\n          <select\n            id=\"tabs\"\n            name=\"tabs\"\n            className=\"block w-full focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md\"\n            defaultValue={tabs.find((_, index) => currentTabIndex === index)}\n            onChange={(e) => setCurrentTabIndex(tabs.indexOf(e.target.value))}\n          >\n            {tabs.map((tab) => (\n              <option key={tab}>{tab}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"hidden sm:block\">\n          <nav className=\"relative z-0 rounded-lg shadow flex divide-x divide-gray-200\" aria-label=\"Tabs\">\n            {tabs.map((tab, tabIdx) => (\n              <a\n                key={tab}\n                onClick={(_) => setCurrentTabIndex(tabIdx)}\n                className={classNames(\n                  tabIdx === currentTabIndex ? 'text-gray-900' : 'text-gray-500 hover:text-gray-700',\n                  tabIdx === 0 ? 'rounded-l-lg' : '',\n                  tabIdx === tabs.length - 1 ? 'rounded-r-lg' : '',\n                  'group relative min-w-0 flex-1 overflow-hidden bg-white py-4 px-4 text-sm font-medium text-center hover:bg-gray-50 focus:z-10 cursor-pointer'\n                )}\n                aria-current={tabIdx === currentTabIndex ? 'page' : undefined}\n              >\n                <span>{tab}</span>\n                <span\n                  aria-hidden=\"true\"\n                  className={classNames(\n                    tabIdx === currentTabIndex ? 'bg-indigo-500' : 'bg-transparent',\n                    'absolute inset-x-0 bottom-0 h-0.5'\n                  )}\n                />\n              </a>\n            ))}\n          </nav>\n        </div>\n        { getSniper() }\n        <p className=\"px-4 mt-6 text-xs text-gray-400 text-center\">\n          This tool is completely open-source and its source code can be found <a className=\"text-indigo-700\" href=\"https://github.com/PaoloRollo/honeypot-sniper\" target=\"_blank\">here</a>.\n          <br/>\n          If something doesn't work as it should be, please feel free to open an issue on the Github project. \n          <br/>\n          Do not take what you see on this website as granted: <strong>do your own research</strong>.\n          <br/>\n          Made with ❤️ by Paolo Rollo.\n          </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}